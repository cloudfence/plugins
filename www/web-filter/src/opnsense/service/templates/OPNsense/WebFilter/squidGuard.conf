# ==================================================================== #
# Webfilter configuration file                                         #
# WebFilter plugin - Cloudfence 2018                                   #
# Please don't touch this file! - conf will be generated automagically #
# ==================================================================== #

logdir /var/log/squid/
dbhome /usr/local/etc/squid/db/


{% if helpers.exists('OPNsense.webfilter.rules') %}
{%  for rule in helpers.toList('OPNsense.webfilter.rules.rule', 'sequence') %}
{%   if rule.enabled|default('0') == '1' %}

{%      if rule.timeinterval|default('') != '' and rule.timedestination|default('') != ''%}
#time based exception
time timerule_{{rule.sequence}} {
{%        for interval in rule.timeinterval.split(",") %}
    weekly * {{interval}} #Exception {{rule.name}}
{%        endfor %}
}
{%      endif %}

{%      if rule.source|default('') == ''  and rule.username|default('') == ''%}
# Rule #{{rule.sequence}} without source ignored - {{rule.name}}
{%      else %}
src rule_{{rule.sequence}} {
{%          if rule.source|default('') != '' %}
{%              for source in rule.source.split(",") %}
    ip {{source}}
{%              endfor %}
{%          endif %}
{%          if rule.username|default('') != '' %}
#Username(s) - {{rule.username}}
{%              for username in rule.username.split(",") %}
    user {{username}}
{%              endfor %}
{%          endif %}
}
{%      endif %}


{%      if rule.blacklistdomains|default('') != '' %}
# Custom Blacklist
dest Blacklist.rule_{{rule.sequence}} {
    domainlist Blacklist/domains.rule_{{rule.sequence}}
}
{%      endif %}

{%      if rule.blacklistregex|default('') != '' %}
# Custom Blacklist Regex
dest BlacklistRegex.rule_{{rule.sequence}} {
     expressionlist Blacklist/expressions.rule_{{rule.sequence}}
}
{%      endif %}

{%      if rule.whitelistdomains|default('') != '' %}
# Custom Whitelist
dest Whitelist.rule_{{rule.sequence}} {
    domainlist Whitelist/domains.rule_{{rule.sequence}}
}
{%      endif %}
{%      if rule.whitelistregex|default('') != '' %}
# Custom Whitelist Regex
dest WhitelistRegex.rule_{{rule.sequence}} {
     expressionlist Whitelist/expressions.rule_{{rule.sequence}}
}
{%      endif %}
{%   endif %}
{%  endfor %}
{% endif %}

# Static generated - If the Categories Repository send me some new category it WILL NOT be included here!
# WIP
dest remote-access {
        domainlist remote-access/domains
        log block.log
}
dest internet-bank {
        domainlist internet-bank/domains
        log block.log
}
dest blogs {
        domainlist blogs/domains
        log block.log
}
dest chat {
        domainlist chat/domains
        log block.log
}
dest cinema {
        domainlist cinema/domains
        log block.log
}
dest shopping {
        domainlist shopping/domains
        log block.log
}
dest cloud-storage {
        domainlist cloud-storage/domains
        log block.log
}
dest downloads {
        domainlist downloads/domains
        log block.log
}
dest jobs {
        domainlist jobs/domains
        log block.log
}
dest dating {
        domainlist dating/domains
        log block.log
}
dest link-shortener {
        domainlist link-shortener/domains
        log block.log
}
dest sports {
        domainlist sports/domains
        log block.log
}
dest forum {
        domainlist forum/domains
        log block.log
}
dest photologs {
        domainlist photologs/domains
        log block.log
}
dest hackers {
        domainlist hackers/domains
        log block.log
}
dest humor {
        domainlist humor/domains
        log block.log
}
dest games {
        domainlist games/domains
        log block.log
}
dest military {
        domainlist military/domains
        log block.log
}
dest music {
        domainlist music/domains
        log block.log
}
dest news {
        domainlist news/domains
        log block.log
}
dest podcasts {
        domainlist podcasts/domains
        log block.log
}
dest politics {
        domainlist politics/domains
        log block.log
}
dest porn {
        domainlist porn/domains
        log block.log
}
dest proxy {
        domainlist proxy/domains
        log block.log
}
dest social-media {
        domainlist social-media/domains
        log block.log
}
dest streaming {
        domainlist streaming/domains
        log block.log
}
dest suspect {
        domainlist suspect/domains
        log block.log
}
dest travel {
        domainlist travel/domains
        log block.log
}
dest warez {
        domainlist warez/domains
        log block.log
}
dest webmail {
        domainlist webmail/domains
        log block.log
}

rew safesearch {
        s@(google\..*/search?.*q=.*)@\1\&safe=active@i
        s@(google\..*/images.*q=.*)@\1\&safe=active@i
        s@(google\..*/groups.*q=.*)@\1\&safe=active@i
        s@(google\..*/news.*q=.*)@\1\&safe=active@i
        s@(yandex\..*/yandsearch?.*text=.*)@\1\&fyandex=1@i
        s@(search\.yahoo\..*/search.*p=.*)@\1\&vm=r&v=1@i
        s@(search\.live\..*/.*q=.*)@\1\&adlt=strict@i
        s@(search\.msn\..*/.*q=.*)@\1\&adlt=strict@i
        s@(\.bing\..*/.*q=.*)@\1\&adlt=strict@i
        s@(.*duckduckgo.com.*)@&&kp=1@i
}


acl  {
{% if helpers.exists('OPNsense.webfilter.rules') %}
{%  for rule in helpers.toList('OPNsense.webfilter.rules.rule', 'sequence') %}
{%   if rule.enabled|default('0') == '1' %}

{%      if rule.source|default('') == ''  and rule.username|default('') == ''%}
# Rule #{{rule.sequence}} without source ignored - {{rule.name}}
{%      else %}
{%      if rule.action == 'block' %}
     rule_{{rule.sequence}} {%          if rule.timeinterval|default('') != '' and rule.timedestination|default('') != ''%}within timerule_{{rule.sequence}} {
      pass  {%   if rule.whitelistdomains|default('') != '' %}Whitelist.rule_{{rule.sequence}} {%  endif%} {%   if rule.whitelistregex|default('') != '' %}WhitelistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.blacklistdomains|default('') != '' %}!Blacklist.rule_{{rule.sequence}}{%  endif%} {%   if rule.blacklistregex|default('') != '' %}!BlacklistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.destination|default('') != '' %}{%   for timecategory in rule.timedestination.split(",") %} !{{timecategory}}{%    endfor %}{%     endif %} all
{%              if rule.urlerror|default('') != '' %}
    redirect {{rule.urlerror}}
{%              endif %}
{%              if rule.safesearch|default('0') == '1' %}
    rewrite safesearch
{%              endif %}
     } else
{%          endif %}
    {
      pass  {%   if rule.whitelistdomains|default('') != '' %}Whitelist.rule_{{rule.sequence}} {%  endif%} {%   if rule.whitelistregex|default('') != '' %}WhitelistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.blacklistdomains|default('') != '' %}!Blacklist.rule_{{rule.sequence}}{%  endif%} {%   if rule.blacklistregex|default('') != '' %}!BlacklistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.destination|default('') != '' %}{%  for category in rule.destination.split(",") %} !{{category}}{%   endfor %}{%     endif %} all
{%              if rule.urlerror|default('') != '' %}
    redirect {{rule.urlerror}}
{%              endif %}
{%              if rule.safesearch|default('0') == '1' %}
    rewrite safesearch
{%              endif %}
    }
{%      endif%}

{%      if rule.action == 'pass' %}
     rule_{{rule.sequence}} {%          if rule.timeinterval|default('') != '' and rule.timedestination|default('') != ''%}within timerule_{{rule.sequence}} {
      pass  {%   if rule.whitelistdomains|default('') != '' %}Whitelist.rule_{{rule.sequence}} {%  endif%} {%   if rule.whitelistregex|default('') != '' %}WhitelistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.blacklistdomains|default('') != '' %}!Blacklist.rule_{{rule.sequence}}{%  endif%} {%   if rule.blacklistregex|default('') != '' %}!BlacklistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.destination|default('') != '' %}{%   for timecategory in rule.timedestination.split(",") %} {{timecategory}}{%    endfor %}{%     endif %} none
{%              if rule.urlerror|default('') != '' %}
    redirect {{rule.urlerror}}
{%              endif %}
{%              if rule.safesearch|default('0') == '1' %}
    rewrite safesearch
{%              endif %}
    }
     } else
{%          endif %}
    {
      pass  {%   if rule.whitelistdomains|default('') != '' %}Whitelist.rule_{{rule.sequence}} {%  endif%} {%   if rule.whitelistregex|default('') != '' %}WhitelistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.blacklistdomains|default('') != '' %}!Blacklist.rule_{{rule.sequence}}{%  endif%} {%   if rule.blacklistregex|default('') != '' %}!BlacklistRegex.rule_{{rule.sequence}} {%  endif%}{%   if rule.destination|default('') != '' %}{%  for category in rule.destination.split(",") %} {{category}}{%   endfor %}{%     endif %} none
{%              if rule.urlerror|default('') != '' %}
    redirect {{rule.urlerror}}
{%              endif %}
{%              if rule.safesearch|default('0') == '1' %}
    rewrite safesearch
{%              endif %}
    }
{%      endif%}
{%      endif %}
{%   endif %}
{%  endfor %}
{% endif %}

default  {
    pass all
        redirect http://block.cloudfence.com.br/
    log block.log
    }

}
